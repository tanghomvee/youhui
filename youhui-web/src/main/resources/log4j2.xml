<?xml version="1.0" encoding="UTF-8"?>
<!-- status=debug 可以查看log4j的装配过程 -->
<configuration status="off" monitorInterval="1800">
    <properties>
        <property name="LOG_HOME">${log.dir}</property>
        <property name="LOG_BACK_HOME">${LOG_HOME}/backup</property>
        <property name="ERROR_FILE_NAME">error</property>
        <property name="WARN_FILE_NAME">warn</property>
        <property name="INFO_FILE_NAME">info</property>
        <property name="DEBUG_FILE_NAME">debug</property>

        <property name="LOG_PATTERN_LAYOUT">%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%class:%line] - %msg%xEx%n</property>
        <property name="DEFAULT_CHARSET">${default.charset}</property>
    </properties>

    <appenders>
        <!-- 定义控制台输出 -->
        <Console name="Console" target="SYSTEM_OUT" follow="true">
            <PatternLayout charset="${DEFAULT_CHARSET}" pattern="${LOG_PATTERN_LAYOUT}"/>
        </Console>

        <!-- 配置日志输出文件名字     追加读写 -->
        <!-- Error console log -->
        <RollingFile name="${ERROR_FILE_NAME}" fileName="${LOG_HOME}/${ERROR_FILE_NAME}.log" filePattern="${LOG_BACK_HOME}/$${date:yyyy-MM}/${ERROR_FILE_NAME}.%d{yyyy-MM-dd}.log" append="true">
            <!-- 输出格式 -->
            <PatternLayout charset="${DEFAULT_CHARSET}" pattern="${LOG_PATTERN_LAYOUT}"/>
            <!-- 设置策略 -->
            <Policies>
                <!-- 基于时间的触发策略。该策略主要是完成周期性的log文件封存工作。有两个参数：
                    interval，integer型，指定两次封存动作之间的时间间隔。单位:以日志的命名精度来确定单位，
                        比如yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟
                    modulate，boolean型，说明是否对封存时间进行调制。若modulate=true，
                        则封存时间将以0点为边界进行偏移计算。比如，modulate=true，interval=4hours，
                        那么假设上次封存日志的时间为03:00，则下次封存日志的时间为04:00，
                        之后的封存时间依次为08:00，12:00，16:00
                 -->
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
            <Filters>
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingFile>

        <!-- Warn console log -->
        <RollingFile name="${WARN_FILE_NAME}" fileName="${LOG_HOME}/${WARN_FILE_NAME}.log" filePattern="${LOG_BACK_HOME}/$${date:yyyy-MM}/${WARN_FILE_NAME}.%d{yyyy-MM-dd}.log" append="true">
            <!-- 输出格式 -->
            <PatternLayout charset="${DEFAULT_CHARSET}" pattern="${LOG_PATTERN_LAYOUT}"/>
            <!-- 设置策略 -->
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
            <Filters>
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingFile>
        <!-- Info console log -->
        <RollingFile name="${INFO_FILE_NAME}" fileName="${LOG_HOME}/${INFO_FILE_NAME}.log" filePattern="${LOG_BACK_HOME}/$${date:yyyy-MM}/${INFO_FILE_NAME}.%d{yyyy-MM-dd}.log" append="true">
            <!-- 输出格式 -->
            <PatternLayout charset="${DEFAULT_CHARSET}" pattern="${LOG_PATTERN_LAYOUT}"/>
            <!-- 设置策略 -->
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
            <Filters>
                <ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingFile>
        <!-- Debug console log -->
        <RollingFile name="${DEBUG_FILE_NAME}" fileName="${LOG_HOME}/${DEBUG_FILE_NAME}.log" filePattern="${LOG_BACK_HOME}/$${date:yyyy-MM}/${DEBUG_FILE_NAME}.%d{yyyy-MM-dd}.log" append="true">
            <!-- 输出格式 -->
            <PatternLayout charset="${DEFAULT_CHARSET}" pattern="${LOG_PATTERN_LAYOUT}"/>
            <!-- 设置策略 -->
            <Policies>
                <TimeBasedTriggeringPolicy interval="1" modulate="true" />
            </Policies>
            <Filters>
                <ThresholdFilter level="info" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingFile>
    </appenders>
    <loggers>
        <!-- 3rdparty Loggers -->
        <logger name="org" level="${log.level}">
            <appender-ref ref="Console"/>
            <appender-ref ref="${DEBUG_FILE_NAME}"/>
            <appender-ref ref="${INFO_FILE_NAME}"/>
            <appender-ref ref="${WARN_FILE_NAME}"/>
            <appender-ref ref="${ERROR_FILE_NAME}"/>
        </logger>


        <logger name="com" level="${log.level}" additivity="false">
            <appender-ref ref="Console"/>
            <appender-ref ref="${DEBUG_FILE_NAME}"/>
            <appender-ref ref="${INFO_FILE_NAME}"/>
            <appender-ref ref="${WARN_FILE_NAME}"/>
            <appender-ref ref="${ERROR_FILE_NAME}"/>
        </logger>

        <logger name="org.hibernate.engine.internal.StatisticalLoggingSessionEventListener" level="warn">
            <appender-ref ref="Console"/>
            <appender-ref ref="${DEBUG_FILE_NAME}"/>
            <appender-ref ref="${INFO_FILE_NAME}"/>
            <appender-ref ref="${WARN_FILE_NAME}"/>
            <appender-ref ref="${ERROR_FILE_NAME}"/>
        </logger>

        <root level="${log.level}">
            <appender-ref ref="Console"/>
            <appender-ref ref="${DEBUG_FILE_NAME}"/>
            <appender-ref ref="${INFO_FILE_NAME}"/>
            <appender-ref ref="${WARN_FILE_NAME}"/>
            <appender-ref ref="${ERROR_FILE_NAME}"/>
        </root>
    </loggers>
</configuration>